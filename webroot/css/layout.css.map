{"version":3,"sources":["settings.scss","shapes/lib/classes.scss","shapes/lib/media-object.scss","shapes/lib/type-setting.scss","layout.css","shapes/lib/rwd.scss","shapes/lib/utils.scss","shapes/lib/button.scss","shapes/lib/stack.scss","shapes/lib/center.scss","shapes/lib/cluster.scss","shapes.scss","partials/root.scss","components/modal.scss","partials/input.scss","layout.scss"],"names":[],"mappings":"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","file":"layout.css","sourcesContent":["/**\n * _settings.scss\n *\n * Use Sass variables and custom properties as appropriate, both are possible\n */\n\n@use 'sass:map';\n\n/**********\n * Colors *\n **********/\n\n// $colors: (\n// \tprimary: #4ADCB1,\n// \tsecondary: #89a4ef,\n// \tbackground: #837c7c,\n// \tcontrast: #F9F9F9, // color-for-bg(var(--primary-color), var(--background-color), $text-color)\n// \ttext: #0c0e26 // #333\n// );\n\n$shades: (\n\t100: 55%,\n\t200: 25%,\n\t300: 10%,\n\t400: 0%,\n\t500: 10%,\n\t600: 20%,\n\t700: 30%,\n\t800: 40%,\n\t900: 60%,\n);\n\n$border: (\n\twidth: 2px,\n\tradius: 0.5rem,\n\tcolor: currentColor,\n\ttype: solid,\n);\n\n/********\n * Typo *\n ********/\n\n$use-type-scale: true;\n$vertical-unit: 1.55rem;\n$modular-scale-ratio: 1.125;\n\n$font-sizes: (\n\t100: 0.5,\n\t200: 0.8,\n\t400: 1,\n\t500: 1.2,\n\t600: 1.4,\n\t700: 1.75,\n\t800: 2.1,\n\t900: 3.8,\n);\n\n\n/************\n * Measures *\n ************/\n$min-header-height: 5rem;\n$max-header-height: 6.5rem;\n\n$inner-bound-width: 52rem;\n$outer-bound-width: 64rem;\n\n$min-supported-screen-width: 320px;\n$max-supported-screen-width: 3440px;\n\n$gutter: 1rem;\n\n$margins: (\n\t100: $gutter * 0.25,\n\t200: $gutter * 0.5,\n\t300: $gutter,\n\t400: $gutter * 2,\n\t500: $gutter * 4,\n\t600: $gutter * 6,\n\t700: $gutter * 8,\n\t800: $gutter * 10,\n\t900: $gutter * 14,\n);\n\n/********************\n * Options/Switches *\n ********************/\n$debug-base-line-grid: false;\n$font-path: '/dist/fonts/';\n\n$full-width-fix: true; // body-text in full-width containers aligns with outer-bound\n$collapsable-header: true; // header collapses on scroll-down\n$substract-header-height: false; // subtracts header height from screen-heighht\n$fade-in-transition: false; // fade in elements when page has loaded\n$loader: 'spinner'; // loading screen type [spinner, dots, bars]\n$start-dark-background: false; // sets the color for header and hero to contrast-color\n$nav-style: 'default'; // sets the style for the navbar [default, folding]\n\n/*****************\n *  Breakpoints  *\n *****************/\n$tablet-portrait-breakpoint: 600px !default;\n$tablet-landscape-breakpoint: 900px !default;\n$desktop-breakpoint: 1200px !default;\n$big-desktop-breakpoint: 1800px !default;\n$huge-desktop-breakpoint: 2400px !default;\n// ... extend as needed\n\n$breakpoints: (\n\tphone: 320px,\n\ttablet-portrait: 600px,\n\ttablet-landscape: 900px,\n\tdesktop: 1200px,\n\tdesktop-big: 1800px,\n\tdesktop-huge: 2400px,\n);","/**\n * src/css/libhalma/_classes.scss\n *\n * Predefined utility classes\n *\n * @author C.Coull <c.coull@agentur-halma.de>\n * @author J. Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2021-05-27\n */\n\n// Screenreader only\n@mixin sr-only($visible-on-focus: true) {\n\t// color: transparent;\n\tdisplay: inline-block;\n\topacity: 0;\n\tbackground: none;\n\tposition: absolute;\n\tline-height: 0;\n\tfont-size: 0;\n\toverflow: hidden;\n\twidth: 2px;\n\theight: 2px;\n\tmargin: -1px;\n\n\t@if $visible-on-focus {\n\t\t&:focus,\n\t\t&:active {\n\t\t\topacity: 1;\n\t\t\t// color: inherit;\n\t\t\tfont-size: inherit;\n\t\t\tline-height: inherit;\n\t\t\twidth: auto;\n\t\t\twidth: max-content;\n\t\t\theight: auto;\n\t\t\theight: max-content;\n\t\t\tmargin: 0;\n\t\t\tz-index: 1;\n\t\t}\n\t}\n}\n\n@mixin bound($bound-width: 64rem, $padding: false) {\n\tbox-sizing: content-box; // Yes ;-) see EveryLayout: Center\n\tmax-width: $bound-width;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\t\n\t@if $padding {\n\t\tpadding-left: $padding;\n\t\tpadding-right: $padding;\n\t}\n}\n\n\n// Take scrollbar-width in to account\n// @see https://destroytoday.com/blog/100vw-and-the-horizontal-overflow-you-probably-didnt-know-about\n@mixin full-width($scrollbar-width: 0) {\n\t--half-screen-width: calc((100vw - #{$scrollbar-width}) / 2);\n\tmargin-left: calc(50% - var(--tusk-half-screen-width));\n\tmargin-right: calc(50% - var(--tusk-half-screen-width));\n}\n\n@mixin skip-link {\n\tposition: fixed;\n\tz-index: 200;\n\ttop: 0;\n\tleft: 50%;\n\ttransform: translate(-50%, -200%);\n\ttransition: transform 300ms ease-in-out;\n\t\n\t&:focus {\n\t\ttransform: translate(-50%, 0%);\n\t}\n}\n\n@mixin list-style-none {\n\tlist-style: none;\n\n\tli {\n\t\tposition: static;\n\t\tpadding: 0;\n\t\t\n\t\t&::before {\n\t\t\tcontent: none;\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n// set Thumn and Background Color\n// use on html to set global\n// Webkit and Chromium will ignore color when size isn't set\n@mixin scrollbars(\n\t$foreground-color: #999,\n  $background-color: #333,\n  $size: false\n) {\n\t@if $size {\n\t\t// For Chrome & Safari\n\t\t&::-webkit-scrollbar {\n\t\t\twidth: $size;\n\t\t\theight: $size;\n\t\t}\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n    background: $foreground-color;\n  }\n  &::-webkit-scrollbar-track {\n    background: var(--tusk-background-color);\n  }\n\n  // Standard version (Firefox only for now)\n  scrollbar-color: $foreground-color var(--tusk-background-color);\n}","/**\n * src/css/libhalma/media-object.scss\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2021-05-31\n */\n@mixin media-object($space: var(--tusk-gutter)) {\n  display: flex;\n  // flex-wrap: wrap;\n  gap: $space;\n\n  // [class*=\"body\"] {\n  //   flex: 1 0 0;\n  // }\n\n  & > :first-child {\n    flex-grow: 1;\n\t\tflex-shrink: 1;\n\t\tflex-basis: 50%;\n  }\n\t\n  & > :last-child {\n\t\tflex-basis: 50%;\n\t\tflex-shrink: 1;\n    flex-grow: 1;\n    // min-inline-size: 50%;\n  }\n}\n","/**\n * src/css/libhalma/_vertical_rhythm.scss\n *\n * @author Carsten Coull <c.coull@agentur-halma.de>\n * @package libhalma\n */\n@use \"sass:math\";\n@use \"sass:map\";\n\n$use-type-scale: true !default;\n$vertical-unit: 2rem !default;\n$modular-scale-ratio: 1.125 !default;\n\n$font-sizes: (\n\t100: 0.5,\n\t200: 0.8,\n\t400: 1,\n\t500: 1.2,\n\t600: 1.4,\n\t700: 1.75,\n\t800: 2.1,\n\t900: 3.8,\n) !default;\n\n@if $use-type-scale {\n\n\t$weight: 100;\n\t$font-sizes: ();\n\n\t@for $weight from 1 to 10 {\n\t\t$delta: $weight - 4;\n\t\t$value: math.pow($modular-scale-ratio, $delta);\n\t\t$font-sizes: map-merge($font-sizes, ($weight * 100: $value));\n\t}\n}\n\n\n@mixin type-setting($level: 400, $margin-bottom: 0) {\n\n\t$font-size: map-get($font-sizes, $level);\n\n\t@if type-of($font-size) != 'number' {\n\t\t@debug \"Could not get font-size vor level \" + $level;\n\t}\n\n\t// Strip unit\n\t$vu: math.div($vertical-unit, $vertical-unit * 0 + 1);\n\t$line-height: math.div($vu, $font-size);\n\n\t// Make sure line-height is at least 1 times the vertical unit\n\t@if $line-height > 0 { // prevent endless loop if somehow line-height is zero or negative\n\t\t@while $line-height < 1 {\n\t\t\t$line-height: $line-height * 1.5; // Steps up half a vertical unit at each step\n\t\t}\n\t\t// $line-height: math.div($line-height, 1.41421);\n\t}\n\n\tfont-size: $font-size + rem;\n\tline-height: $line-height + em;\n\tmargin-bottom: ($line-height * $margin-bottom) + rem;\n}\n\n\n$debug-base-line-grid: true;\n$visual-base-line-grid-offset: -16px !default;\n$visual-base-line-grid-above: true !default;\n\n// Visual baseline grid for debugging (\"Grundlinienraster\")\n@if $debug-base-line-grid {\n\tbody {\n\t\tposition: relative;\n\t}\n\t.debug-base-line-grid {\n\t\tbackground-image: linear-gradient(\n\t\t\tto bottom,\n\t\t\ttransparent 0,\n\t\t\ttransparent calc(#{$vertical-unit}),\n\t\t\trgba(tomato, 0.1) calc(#{$vertical-unit}),\n\t\t\trgba(tomato, 0.1)\n\t\t);\n\t\tbackground-size: 100% (2 * $vertical-unit);\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\tpointer-events: none;\n\t\t@if $visual-base-line-grid-above {\n\t\t\tz-index: 32766;\n\t\t}\n\t\t@else {\n\t\t\tz-index: 0;\n\t\t}\n\t\ttop: $visual-base-line-grid-offset;\n\t}\n}\n\n","/**\n * _settings.scss\n *\n * Use Sass variables and custom properties as appropriate, both are possible\n */\n/**********\n * Colors *\n **********/\n/********\n * Typo *\n ********/\n/************\n * Measures *\n ************/\n/********************\n * Options/Switches *\n ********************/\n/*****************\n *  Breakpoints  *\n *****************/\n/**\n * src/css/libhalma/_classes.scss\n *\n * Predefined utility classes\n *\n * @author C.Coull <c.coull@agentur-halma.de>\n * @author J. Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2021-05-27\n */\n/**\n * src/css/libhalma/media-object.scss\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2021-05-31\n */\n/**\n * src/css/libhalma/_vertical_rhythm.scss\n *\n * @author Carsten Coull <c.coull@agentur-halma.de>\n * @package libhalma\n */\nbody {\n  position: relative;\n}\n\n.debug-base-line-grid {\n  background-image: linear-gradient(to bottom, transparent 0, transparent calc(1.55rem), rgba(255, 99, 71, 0.1) calc(1.55rem), rgba(255, 99, 71, 0.1));\n  background-size: 100% 3.1rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  pointer-events: none;\n  z-index: 32766;\n  top: -16px;\n}\n\n/**\n * libhalma/_rwd.scss\n *\n * Breakpoints, media queries, responsive webdesign\n * See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862\n *\n * @usage: @include for-size(tablet-landscape-up) { ... }\n *\t\t\t\t Use a pre devined size from $breakpoints with added '-up' or '-down' for direction.\n *\n * \t\t\t\t @include for-size(1200px, up) { ... }\n *\t\t\t\t If second parameter is 'up' or 'down' it will be used as direction and a custom size can be used.\n *\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>, Carsten Coull <c.coull@agebtur-halma.de>\n * @package libhalma\n */\n/**\n * src/css/mixins/_utils.scss\n *\n * Utility mixins and functions\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n */\n/**\n * strip-unit\n *\n * Returns the unitless number\n * From: https://css-tricks.com/snippets/sass/strip-unit-function/\n *\n * @param number\n * @return number\n */\n/**\n * pow\n *\n * Return the number risen to the power of n\n * From: https://css-tricks.com/snippets/sass/power-function/\n *\n * @param number \tThe operator\n * @param exp \t\tThe exponent\n * @return number\n */\n/**\n * Calculates the sRGB luma of a colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Math nicked from a great Thoughtbot article by Reda Lemeden:\n * http://robots.thoughtbot.com/closer-look-color-lightness\n */\n/*\n * Picks a colour from two options based on which one is more visible\n * on the given background colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Usage: color-for-bg($bg-color, $color-1, $color-2)\n */\n/*\n * @author Carsten Coull <c.coull@agentur-halma.de>\n *\n * Slope Utilits\n * sets a Graph to use for unit\n *\n * Needs a calc support\n */\n/*\n * for fluid type to fit to screen;\n */\n/*\n * Sets a fluid Unit between to Values\n *\n * $min-size: Minimum Value\n * $max-size: Maximum Value\n * $min-view: Size at which to use $min-size\n * $max-view: Size at which to use $max-size\n *\n * works best with px Unit\n */\n/* Can be used with Custom Proporties */\n/**\n * _ui.scss\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n */\n/**\n * Reset button\n * See: https://fvsch.com/styling-buttons/\n */\n/**\n * The Stack\n *\n * Spacing for vertically stacked blocks\n */\n/**\n * From: EveryLayout\n */\n/**\n * The Cluster\n *\n * https://every-layout.dev/demos/cluster-ctas/\n *\n * We can use `gap` now on flexbox items, so it gets really easy now :-)\n */\n/**\n * src/css/libhalma/_libhalma.scss\n *\n * Libhalma: A simple, solid and accessible basic library for css\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2020-11-09\n */\n:root {\n  --tusk-primary-color: #4ADCB1;\n  --tusk-primary-color-100: white;\n  --tusk-primary-color-200: #b5f1df;\n  --tusk-primary-color-300: #75e4c3;\n  --tusk-primary-color-400: #4ADCB1;\n  --tusk-primary-color-500: #27cc9b;\n  --tusk-primary-color-600: #1fa17b;\n  --tusk-primary-color-700: #17765a;\n  --tusk-primary-color-800: #0f4b3a;\n  --tusk-primary-color-900: black;\n  --tusk-secondary-color: #c2c1bf;\n  --tusk-secondary-color-100: white;\n  --tusk-secondary-color-200: white;\n  --tusk-secondary-color-300: #dbdad9;\n  --tusk-secondary-color-400: #c2c1bf;\n  --tusk-secondary-color-500: #a9a8a5;\n  --tusk-secondary-color-600: #908e8b;\n  --tusk-secondary-color-700: #777571;\n  --tusk-secondary-color-800: #5d5b58;\n  --tusk-secondary-color-900: #282827;\n  --tusk-background-color: #0c0e26;\n  --tusk-background-color-100: #777ed4;\n  --tusk-background-color-200: #2b3287;\n  --tusk-background-color-300: #181c4d;\n  --tusk-background-color-400: #0c0e26;\n  --tusk-background-color-500: black;\n  --tusk-background-color-600: black;\n  --tusk-background-color-700: black;\n  --tusk-background-color-800: black;\n  --tusk-background-color-900: black;\n  --tusk-contrast-color: #F9F9F9;\n  --tusk-contrast-color-100: white;\n  --tusk-contrast-color-200: white;\n  --tusk-contrast-color-300: white;\n  --tusk-contrast-color-400: #F9F9F9;\n  --tusk-contrast-color-500: #e0e0e0;\n  --tusk-contrast-color-600: #c6c6c6;\n  --tusk-contrast-color-700: #adadad;\n  --tusk-contrast-color-800: #939393;\n  --tusk-contrast-color-900: #606060;\n  --tusk-text-color: #0c0e26;\n  --tusk-text-color-100: #777ed4;\n  --tusk-text-color-200: #2b3287;\n  --tusk-text-color-300: #181c4d;\n  --tusk-text-color-400: #0c0e26;\n  --tusk-text-color-500: black;\n  --tusk-text-color-600: black;\n  --tusk-text-color-700: black;\n  --tusk-text-color-800: black;\n  --tusk-text-color-900: black;\n  --tusk-primary: var(--tusk-primary-color) !important;\n  --tusk-primary-hover: var(--tusk-primary-color-500) !important;\n  --tusk-primary-focus: var(--tusk-primary-color-200) !important;\n  --tusk-margin: 2rem;\n  --tusk-margin-100: 0.25rem;\n  --tusk-margin-200: 0.5rem;\n  --tusk-margin-300: 1rem;\n  --tusk-margin-400: 2rem;\n  --tusk-margin-500: 4rem;\n  --tusk-margin-600: 6rem;\n  --tusk-margin-700: 8rem;\n  --tusk-margin-800: 10rem;\n  --tusk-margin-900: 14rem;\n  --tusk-border-width: 2px;\n  --tusk-border-radius: 0.5rem;\n  --tusk-border-color: currentColor;\n  --tusk-border-type: solid;\n  --tusk-border: var(--tusk-border-color) var(--tusk-border-width) var(--tusk-border-type) var(--tusk-border-radius);\n  --tusk-gutter: 1rem;\n  --tusk-vertical-unit: 1.55rem;\n  --tusk-outer-bound: 2rem;\n  --tusk-inner-bound-width: 52rem;\n  --tusk-outer-bound-width: 64rem;\n  --tusk-header-height: clamp(5rem, (100vw * 0.0076923077) - -4.8461538462rem, 6.5rem);\n  --tusk-screen-height: 100vh;\n}\n\n.margin--tusk- {\n  margin-bottom: var(--tusk-margin);\n}\n\n.margin--tusk-100 {\n  margin-bottom: var(--tusk-margin-100);\n}\n\n.margin-bottom--tusk-100 {\n  margin-bottom: var(--tusk-margin-100);\n}\n\n.margin-top--tusk-100 {\n  margin-top: var(--tusk-margin-100);\n}\n\n.gap--tusk-100 {\n  gap: var(--tusk-margin-100);\n}\n\n.stack--tusk-100 > * + * {\n  margin-top: var(--tusk-margin-100);\n}\n\n.margin--tusk-200 {\n  margin-bottom: var(--tusk-margin-200);\n}\n\n.margin-bottom--tusk-200 {\n  margin-bottom: var(--tusk-margin-200);\n}\n\n.margin-top--tusk-200 {\n  margin-top: var(--tusk-margin-200);\n}\n\n.gap--tusk-200 {\n  gap: var(--tusk-margin-200);\n}\n\n.stack--tusk-200 > * + * {\n  margin-top: var(--tusk-margin-200);\n}\n\n.margin--tusk-300 {\n  margin-bottom: var(--tusk-margin-300);\n}\n\n.margin-bottom--tusk-300 {\n  margin-bottom: var(--tusk-margin-300);\n}\n\n.margin-top--tusk-300 {\n  margin-top: var(--tusk-margin-300);\n}\n\n.gap--tusk-300 {\n  gap: var(--tusk-margin-300);\n}\n\n.stack--tusk-300 > * + * {\n  margin-top: var(--tusk-margin-300);\n}\n\n.margin--tusk-400 {\n  margin-bottom: var(--tusk-margin-400);\n}\n\n.margin-bottom--tusk-400 {\n  margin-bottom: var(--tusk-margin-400);\n}\n\n.margin-top--tusk-400 {\n  margin-top: var(--tusk-margin-400);\n}\n\n.gap--tusk-400 {\n  gap: var(--tusk-margin-400);\n}\n\n.stack--tusk-400 > * + * {\n  margin-top: var(--tusk-margin-400);\n}\n\n.margin--tusk-500 {\n  margin-bottom: var(--tusk-margin-500);\n}\n\n.margin-bottom--tusk-500 {\n  margin-bottom: var(--tusk-margin-500);\n}\n\n.margin-top--tusk-500 {\n  margin-top: var(--tusk-margin-500);\n}\n\n.gap--tusk-500 {\n  gap: var(--tusk-margin-500);\n}\n\n.stack--tusk-500 > * + * {\n  margin-top: var(--tusk-margin-500);\n}\n\n.margin--tusk-600 {\n  margin-bottom: var(--tusk-margin-600);\n}\n\n.margin-bottom--tusk-600 {\n  margin-bottom: var(--tusk-margin-600);\n}\n\n.margin-top--tusk-600 {\n  margin-top: var(--tusk-margin-600);\n}\n\n.gap--tusk-600 {\n  gap: var(--tusk-margin-600);\n}\n\n.stack--tusk-600 > * + * {\n  margin-top: var(--tusk-margin-600);\n}\n\n.margin--tusk-700 {\n  margin-bottom: var(--tusk-margin-700);\n}\n\n.margin-bottom--tusk-700 {\n  margin-bottom: var(--tusk-margin-700);\n}\n\n.margin-top--tusk-700 {\n  margin-top: var(--tusk-margin-700);\n}\n\n.gap--tusk-700 {\n  gap: var(--tusk-margin-700);\n}\n\n.stack--tusk-700 > * + * {\n  margin-top: var(--tusk-margin-700);\n}\n\n.margin--tusk-800 {\n  margin-bottom: var(--tusk-margin-800);\n}\n\n.margin-bottom--tusk-800 {\n  margin-bottom: var(--tusk-margin-800);\n}\n\n.margin-top--tusk-800 {\n  margin-top: var(--tusk-margin-800);\n}\n\n.gap--tusk-800 {\n  gap: var(--tusk-margin-800);\n}\n\n.stack--tusk-800 > * + * {\n  margin-top: var(--tusk-margin-800);\n}\n\n.margin--tusk-900 {\n  margin-bottom: var(--tusk-margin-900);\n}\n\n.margin-bottom--tusk-900 {\n  margin-bottom: var(--tusk-margin-900);\n}\n\n.margin-top--tusk-900 {\n  margin-top: var(--tusk-margin-900);\n}\n\n.gap--tusk-900 {\n  gap: var(--tusk-margin-900);\n}\n\n.stack--tusk-900 > * + * {\n  margin-top: var(--tusk-margin-900);\n}\n\n#close-modal {\n  background-color: unset;\n  border: none;\n  display: block;\n  height: 2rem;\n  padding: 0.4rem;\n  color: currentColor;\n}\n#close-modal svg {\n  fill: currentColor;\n  display: block;\n  width: auto;\n  height: 1rem;\n}\n\n.modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgb(255, 255, 255);\n  min-width: 42rem;\n  max-width: 100vw;\n  resize: both;\n  overflow: auto;\n  border-radius: 0.25rem;\n  border: none;\n}\n.modal::backdrop {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  background-color: black;\n  color: #FFF;\n  padding-left: 0.5rem;\n  font-weight: 600;\n}\n.modal-main {\n  padding: 1rem;\n  justify-self: stretch;\n  align-self: stretch;\n}\n.modal-form {\n  display: grid;\n  gap: 2rem;\n}\n.modal-form legend {\n  display: none;\n}\n\na, button, input, select, textarea {\n  font: inherit;\n  cursor: pointer;\n  color: inherit;\n}\na:focus, button:focus, input:focus, select:focus, textarea:focus {\n  outline: none;\n}\n\n[disabled] {\n  opacity: 0.6;\n  pointer-events: none;\n  cursor: default;\n}\n\ninput[type=text], textarea {\n  cursor: text;\n}\n\ninput, textarea, select, input[type=file] {\n  background-color: var(--tusk-contrast-color);\n  color: var(--tusk-text-color);\n  border: var(--tusk-border-width) var(--tusk-border-type) var(--tusk-border-color);\n  border-radius: var(--tusk-border-radius);\n  font-size: 1rem;\n  line-height: 1.55em;\n  margin-bottom: 0rem;\n  padding: 0.25em 0.5em;\n}\ninput[readonly], textarea[readonly], select[readonly], input[type=file][readonly] {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n\ninput[type=checkbox] {\n  width: auto;\n  display: inline-block;\n}\n\nlabel {\n  font-weight: 600;\n}\n\n.input {\n  display: flex;\n  flex-direction: column;\n  min-width: 32ex;\n  width: fit-content;\n  align-items: flex-start;\n  gap: 0.25rem;\n}\n\n.checkbox label {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.checkbox label input {\n  margin-right: var(--tusk-margin-200);\n}\n\n.button, .button-container a, button {\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  cursor: pointer;\n  padding: var(--tusk-margin-100) var(--tusk-margin-300);\n  color: var(--tusk-contrast-color);\n  background-color: var(--tusk-primary-color);\n  text-align: center;\n  text-decoration: none;\n  border-width: var(--tusk-border-width);\n  border-style: solid;\n  border-color: var(--tusk-primary-color);\n  border-radius: calc(var(--tusk-border-radius) * 0.5);\n  outline: none;\n  display: inline-flex;\n  align-items: baseline;\n  font-weight: 600;\n}\n.button::-moz-focus-inner, .button-container a::-moz-focus-inner, button::-moz-focus-inner {\n  border: none;\n}\n.button:active, .button-container a:active, button:active {\n  transform: translateY(1px);\n  filter: saturate(150%);\n}\n.button:hover, .button-container a:hover, .button:focus, .button-container a:focus, button:hover, button:focus {\n  background-color: transparent;\n  color: var(--tusk-primary-color);\n  border-color: var(--tusk-primary-color);\n}\n.button > span + span, .button-container a > span + span, button > span + span {\n  margin-left: 0.5ch;\n}\n\n.button-reset {\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  cursor: pointer;\n}\n\n.icon-button {\n  height: 2.7em;\n  display: flex;\n  gap: var(--tusk-margin-200);\n  justify-content: center;\n  align-items: center;\n}\n.icon-button * {\n  display: inline-block;\n}\n\n.alt-button, .alt-button-container a {\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  cursor: pointer;\n  padding: var(--tusk-margin-100) var(--tusk-margin-300);\n  color: var(--tusk-contrast-color);\n  background-color: var(--tusk-secondary-color);\n  text-align: center;\n  text-decoration: none;\n  border-width: var(--tusk-border-width);\n  border-style: solid;\n  border-color: var(--tusk-secondary-color);\n  border-radius: calc(var(--tusk-border-radius) * 0.5);\n  outline: none;\n  display: inline-flex;\n  align-items: baseline;\n  font-weight: 600;\n}\n.alt-button::-moz-focus-inner, .alt-button-container a::-moz-focus-inner {\n  border: none;\n}\n.alt-button:active, .alt-button-container a:active {\n  transform: translateY(1px);\n  filter: saturate(150%);\n}\n.alt-button:hover, .alt-button-container a:hover, .alt-button:focus, .alt-button-container a:focus {\n  background-color: transparent;\n  color: var(--tusk-secondary-color);\n  border-color: var(--tusk-secondary-color);\n}\n.alt-button > span + span, .alt-button-container a > span + span {\n  margin-left: 0.5ch;\n}\n\n.body-text a {\n  color: var(--tusk-primary-color);\n  font-weight: 600;\n}\n.body-text a:hover, .body-text a:focus {\n  color: var(--tusk-primary-color-500);\n}\n.body-text a:focus {\n  outline: 2px solid var(--tusk-primary-color-500);\n  outline-offset: 2px;\n}\n.body-text a:active {\n  color: var(--tusk-primary-color-800);\n}\n\n.skip-link {\n  position: fixed;\n  z-index: 200;\n  top: 0;\n  left: 50%;\n  transform: translate(-50%, -200%);\n  transition: transform 300ms ease-in-out;\n}\n.skip-link:focus {\n  transform: translate(-50%, 0%);\n}\n\n.editor {\n  box-shadow: 0 0 2rem #ddd;\n  border-radius: var(--tusk-tusk-border-radius);\n  padding: var(--tusk-tusk-margin-200) var(--tusk-tusk-margin-500);\n  min-height: 300px;\n}\n.editor .codex-editor {\n  height: 100%;\n}\n\nbody {\n  padding-top: 2rem;\n}\n\n.layout-menu {\n  background-color: grey;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 200;\n  height: 2rem;\n}\n.layout-menu__button {\n  display: inline-block;\n  background-color: var(--tusk-primary-color);\n  color: var(--tusk-contrast-color);\n  font-weight: 800;\n  text-decoration: none;\n  border: none;\n  padding: 0 var(--tusk-margin-400);\n}\n.layout-menu__button:focus, .layout-menu__button:hover {\n  background-color: var(--tusk-primary-color-500);\n}\n.layout-menu__button + * {\n  margin-left: auto;\n}\n\n.layout-element {\n  position: relative;\n  border: solid 4px transparent;\n  margin-top: -4px;\n  margin-bottom: -4px;\n  transition: 150ms border-color;\n}\n.layout-element:hover, .layout-element:focus-within {\n  border: solid 4px var(--tusk-primary-color);\n}\n.layout-element:hover .layout-handle, .layout-element:focus-within .layout-handle {\n  opacity: 1;\n}\n\n.layout-handle {\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  right: 1rem;\n  transition: 150ms opacity;\n  display: flex;\n}\n\n.tusk-button {\n  display: inline-block;\n  background-color: var(--tusk-primary-color);\n  color: var(--tusk-contrast-color);\n  font-weight: 800;\n  text-decoration: none;\n  border: none;\n  padding: var(--tusk-margin-200) var(--tusk-margin-400);\n}\n.tusk-button:focus, .tusk-button:hover {\n  background-color: var(--tusk-primary-color-500);\n}\n\n.modal-form fieldset {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  border: none;\n}\n.modal-form .input {\n  display: flex;\n  flex-direction: column;\n  min-width: 12ex;\n  width: 100%;\n}\n.modal-form input[type=text], .modal-form input[type=number], .modal-form select, .modal-form textarea {\n  color: var(--tusk-text-color);\n  padding: var(--tusk-margin-200);\n  box-shadow: 0 0 2rem #ddd;\n  border-radius: 0.5rem;\n  border-radius: var(--tusk-border-radius);\n  border: none;\n}\n.modal-form input[type=checkbox] {\n  width: 1em;\n  height: 1em;\n  accent-color: var(--tusk-primary-color);\n  margin-right: 0.5rem;\n}","/**\n * libhalma/_rwd.scss\n *\n * Breakpoints, media queries, responsive webdesign\n * See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862\n *\n * @usage: @include for-size(tablet-landscape-up) { ... }\n *\t\t\t\t Use a pre devined size from $breakpoints with added '-up' or '-down' for direction.\n *\n * \t\t\t\t @include for-size(1200px, up) { ... }\n *\t\t\t\t If second parameter is 'up' or 'down' it will be used as direction and a custom size can be used.\n *\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>, Carsten Coull <c.coull@agebtur-halma.de>\n * @package libhalma\n */\n\n$breakpoints: (\n\ttablet-portrait: 600px,\n\ttablet-landscape: 900px,\n\tdesktop: 1200px,\n\tdesktop-big: 1800px,\n\tdesktop-huge: 2400px,\n) !default;\n\n@mixin for-size($size, $direction: false) {\n\t$notFound: true;\n\n\t@if $direction {\n\t\t@if $direction == 'up' {\n\t\t\t$notFound: false;\n\t\t\t@media (min-width: $size) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else if $direction == 'down' {\n\t\t\t$notFound: false;\n\t\t\t@media (max-width: $size) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t} @else {\n\t\t@each $breakpoint, $width in $breakpoints {\n\t\t\t@if $size == #{$breakpoint}-up {\n\t\t\t\t$notFound: false;\n\t\t\t\t@media (min-width: #{$width}) {\n\t\t\t\t\t@content;\n\t\t\t\t}\n\t\t\t} @else if $size == #{$breakpoint}-down {\n\t\t\t\t$notFound: false;\n\t\t\t\t@media (max-width: #{$width}) {\n\t\t\t\t\t@content;\n\t\t\t\t}\n\t\t\t} @else if $size == $breakpoint {\n\t\t\t\t$notFound: false;\n\t\t\t\t@media (max-width: #{$width - 1}) {\n\t\t\t\t\t@content;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t@if $notFound {\n\t\t@error \"Breakpoint: no width for #{$size} devined\";\n\t}\n}\n","@use \"sass:math\";\n/**\n * src/css/mixins/_utils.scss\n *\n * Utility mixins and functions\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n */\n\n/**\n * strip-unit\n *\n * Returns the unitless number\n * From: https://css-tricks.com/snippets/sass/strip-unit-function/\n *\n * @param number\n * @return number\n */\n@function strip-unit ($number) {\n\t@if type-of ($number) == 'number' and not unitless ($number) {\n\t\t@return math.div($number, ($number * 0 + 1));\n\t}\n\t@return $number;\n}\n\n\n\n/**\n * pow\n *\n * Return the number risen to the power of n\n * From: https://css-tricks.com/snippets/sass/power-function/\n *\n * @param number \tThe operator\n * @param exp \t\tThe exponent\n * @return number\n */\n@function pow ($number, $exp) {\n\t$val: 1;\n\t@if $exp > 0 {\n\t\t@for $i from 1 through $exp {\n\t\t\t$val: $val * $number;\n\t\t}\n\t}\n\t@return $val;\n}\n\n/**\n * Calculates the sRGB luma of a colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Math nicked from a great Thoughtbot article by Reda Lemeden:\n * http://robots.thoughtbot.com/closer-look-color-lightness\n */\n\n@function luma($c) {\n\t$-local-red: red(rgba($c, 1));\n\t$-local-green: green(rgba($c, 1));\n\t$-local-blue: blue(rgba($c, 1));\n\n\t@return math.div((0.2126 * $-local-red  + 0.7152 * $-local-green + 0.0722 * $-local-blue), 255);\n}\n\n\n/*\n * Picks a colour from two options based on which one is more visible\n * on the given background colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Usage: color-for-bg($bg-color, $color-1, $color-2)\n */\n\n@function color-for-bg($bg, $c1, $c2) {\n\t$bg-luma: luma($bg);\n\t$c1-luma: luma($c1);\n\t$c2-luma: luma($c2);\n\n\t$c1-diff: abs($bg-luma - $c1-luma);\n\t$c2-diff: abs($bg-luma - $c2-luma);\n\n\t@if $c1-diff > $c2-diff {\n\t\t@return $c1;\n\t}\n\t@else {\n\t\t@return $c2;\n\t}\n}\n\n/*\n * @author Carsten Coull <c.coull@agentur-halma.de>\n *\n * Slope Utilits\n * sets a Graph to use for unit\n *\n * Needs a calc support\n */\n\n/*\n * for fluid type to fit to screen;\n */\n@mixin slope-type($slope, $offset: 1rem) {\n\tfont-size: $offset * (1 + $slope);\n\tfont-size: calc(#{slope-size($slope, $offset)});\n\tline-height: 1em;\n\n\t@include for-size($m) {\n\t\tfont-size: $offset * (2 + $slope);\n\t\tfont-size: calc(#{slope-size($slope, $offset)});\n\t}\n\tline-height: 1em;\n}\n\n@function slope($slope, $offset: 1rem) {\n\t@return (#{$slope} *  100vw + #{$offset});\n}\n\n/*\n * Sets a fluid Unit between to Values\n *\n * $min-size: Minimum Value\n * $max-size: Maximum Value\n * $min-view: Size at which to use $min-size\n * $max-view: Size at which to use $max-size\n *\n * works best with px Unit\n */\n\n@function slope-minmax($min-size: 16px, $max-size: 124px, $min-view: 320px, $max-view: 1920px) {\n\t$slope: ($max-size - $min-size) / ($max-view - $min-view);\n\t$offset: ($slope * $min-view) - $min-size;\n\n\t@return (100vw * #{$slope} - #{$offset});\n}\n\n@mixin slope-type-minmax ($min-size: 16px, $max-size: 124px, $min-view: 320px, $max-view: 1920px) {\n\tfont-size: $min-size;\n\tline-height: 1.125em;\n\t// margin-bottom: 1.125em;\n\n\t@media (min-width: $min-view) {\n\t\tfont-size: calc(#{slope-minmax($min-size, $max-size, $min-view, $max-view)});\n\t}\n\n\t@media (min-width: $max-view) {\n\t\tfont-size: $max-size;\n\t}\n}\n\n/* Can be used with Custom Proporties */\n@mixin slope-property-minmax ($property, $min-size: 16px, $max-size: 124px, $min-view: 320px, $max-view: 1920px) {\n\t#{$property}: $min-size;\n\n\t@media (min-width: $min-view) {\n\t\t#{$property}: calc(#{slope-minmax($min-size, $max-size, $min-view, $max-view)});\n\t}\n\n\t@media (min-width: $max-view) {\n\t\t#{$property}: $max-size;\n\t}\n}\n\n@function rem-to-px($rem) {\n\t@return (strip-unit($rem) * 16) * 1px;\n}\n\n@function px-to-rem($px) {\n\t@return math.div(strip-unit($px), 16) * 1rem;\n}\n\n@function slope-rem-minmax($min-size: 1rem, $max-size: 7.5rem, $min-view: 320px, $max-view: 1920px) {\n\t$slope: math.div(($max-size - $min-size), strip-unit(px-to-rem($max-view) - px-to-rem($min-view)));\n\t$offset: strip-unit($slope * px-to-rem($min-view)) - $min-size;\n\n\t@return clamp(#{$min-size}, (100vw * #{strip-unit($slope)}) - #{$offset}, #{$max-size});\n}\n\n@mixin fixed-ratio ($width, $height) {\n\tdisplay: block;\n\tposition: relative;\n\tmax-width: 100%;\n\t\n\t&::after {\n\t\tcontent: '';\n\t\theight: 0;\n\t\tpadding-bottom: math.div( $height, $width ) * 100%;\n\t\tdisplay: block;\n\t}\n\t\n\t& > *:first-child {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: hidden;\n\t}\n\n\t@supports(aspect-ratio: 1 / 1) {\n\t\taspect-ratio: math.div( $width, $height );\n\n\t\t&::after {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t& > *:first-child {\n\t\t\tposition: static;\n\t\t}\n\t}\n}\n","/**\n * _ui.scss\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n */\n\n@use 'sass:math';\n\n/**\n * Reset button\n * See: https://fvsch.com/styling-buttons/\n */\n@mixin button-reset {\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  cursor: pointer;\n}\n\n$color: #333 !default;\n$background-color: #fff !default;\n$padding: 1rem 0.5rem !default;\n$border-radius: 4px !default;\n$border-width: 2px !default;\n$border-color: currentColor !default;\n$border-color-hover: currentColor !default;\n$color-hover: $background-color !default;\n$background-color-hover: $color !default;\n\n@mixin button(\n  $color: $color,\n  $background-color: $background-color,\n  $padding: $padding,\n  $border-radius: $border-radius,\n  $border-width: $border-width,\n  $border-color: $border-color,\n  $border-color-hover: $border-color-hover,\n\t$color-hover: $color-hover,\n\t$background-color-hover: $background-color-hover,\n) {\n  @include button-reset;\n\n  // margin: $border-width 0;\n  padding: $padding;\n\n  color: $color;\n  background-color: $background-color;\n  text-align: center;\n  text-decoration: none;\n  \n\tborder-width: $border-width;\n  border-style: solid;\n  border-color: $border-color;\n  border-radius: $border-radius;\n  outline: none;\n\t\n  &::-moz-focus-inner {\n    border: none;\n  }\n\n  &:active {\n    transform: translateY(1px);\n    filter: saturate(150%);\n  }\n\n  &:hover,\n  &:focus {\n    background-color: $background-color-hover;\n    color: $color-hover;\n    border-color: $border-color-hover;\n  }\n\n  // for buttons with icon\n  display: inline-flex;\n  align-items: baseline;\n\n  > span + span {\n    margin-left: 0.5ch;\n  }\n}","/**\n * The Stack\n *\n * Spacing for vertically stacked blocks\n */\n\n$stack-spacing: 1rem !default;\n\n@mixin stack($spacing: $stack-spacing) {\n\t> * + * {\n\t\tmargin-top: $spacing;\n\t}\n}\n\n\n","/**\n * From: EveryLayout\n */\n@mixin center($max-width: false) {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\t@if $max-width {\n\t\tmax-width: $max-width;\n\t}\n}\n","/**\n * The Cluster\n *\n * https://every-layout.dev/demos/cluster-ctas/\n *\n * We can use `gap` now on flexbox items, so it gets really easy now :-)\n */\n\n$cluster-spacing: 1rem !default;\n$cluster-gap: true;\n\n@mixin cluster($spacing: $cluster-spacing, $use-gap: $cluster-gap) {\n  @if $use-gap {\n    gap: $spacing;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n  } @else {\n    > * {\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-start;\n      align-items: center;\n      margin: calc(#{$spacing} / 2 * -1);\n    }\n  }\n\n  @if $use-gap != true {\n    > * > * {\n      margin: calc(#{$spacing} / 2);\n    }\n  }\n}\n","/**\n * src/css/libhalma/_libhalma.scss\n *\n * Libhalma: A simple, solid and accessible basic library for css\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2020-11-09\n */\n\n@use 'settings';\n@use 'sass:map';\n\n// Edit as needed\n\n@forward\"shapes/lib/classes\";\n\n@forward\"shapes/lib/fluid-type\";\n\n@forward\"shapes/lib/media-object\";\n\n@forward\"shapes/lib/type-setting\" with (\n\t$use-type-scale: settings.$use-type-scale,\n\t$vertical-unit: settings.$vertical-unit,\n\t$modular-scale-ratio: settings.$modular-scale-ratio,\n\t$font-sizes: settings.$font-sizes\n);\n\n@forward\"shapes/lib/rwd\" with (\n\t$breakpoints: settings.$breakpoints\n);\n\n@forward\"shapes/lib/utils\";\n\n@forward\"shapes/lib/button\" with (\n  $color: var(--tusk-contrast-color),\n  $background-color: var(--tusk-primary-color),\n  $padding: var(--tusk-margin-100) var(--tusk-margin-300),\n  $border-radius: calc(var(--tusk-border-radius) * 0.5),\n  $border-width: var(--tusk-border-width),\n  $border-color: var(--tusk-primary-color),\n  $border-color-hover: var(--tusk-primary-color),\n  $background-color-hover: transparent\n);\n\n@forward\"shapes/lib/box\" with (\n  $box-color: var(--tusk-text-color),\n  $box-background: var(--tusk-background-color),\n  $box-padding: settings.$gutter * 2,\n  $box-border-color: none,\n  $box-border-width: 0,\n  $box-border-radius: var(--tusk-border-radius)\n);\n\n@forward\"shapes/lib/stack\" with ($stack-spacing: var(--tusk-margin-400));\n\n@forward\"shapes/lib/center\";\n\n@forward\"shapes/lib/cluster\";\n\n@forward\"shapes/lib/cover\";\n\n@forward\"shapes/lib/icon\";\n","@use \"settings\" as *;\n@use 'sass:map';\n@use \"shapes\";\n\n$prefix: -- !default;\n$colors: (\n\tprimary: #4ADCB1,\n\tsecondary: #c2c1bf,\n\tbackground: #0c0e26,\n\tcontrast: #F9F9F9,\n\t// color-for-bg(var(--primary-color), var(--background-color), $text-color)\n\ttext: #0c0e26 // #333\n) !default;\n\n@function color($key) {\n\t@return map.get($colors, $key);\n}\n\n:root {\n\t@each $color,\n\t$value in $colors {\n\t\t#{$prefix}#{$color}-color: #{$value};\n\t\t\n\t\t@each $shade,\n\t\t$weight in $shades {\n\t\t\t@if $shade < 400 {\n\t\t\t\t#{$prefix}#{$color}-color-#{$shade}: #{lighten($value, $weight)};\n\t\t\t}\n\t\t\t\n\t\t\t@else if $shade >400 {\n\t\t\t\t#{$prefix}#{$color}-color-#{$shade}: #{darken($value, $weight)};\n\t\t\t}\n\t\t\t\n\t\t\t@else {\n\t\t\t\t#{$prefix}#{$color}-color-#{$shade}: #{$value};\n\t\t\t}\n\t\t}\n\t}\n\n\t#{$prefix}primary: var(#{$prefix}primary-color) !important;\n\t#{$prefix}primary-hover: var(#{$prefix}primary-color-500) !important;\n\t#{$prefix}primary-focus: var(#{$prefix}primary-color-200) !important;\n\n\t#{$prefix}margin: map.get($margins, 400);\n\n\t@each $key,\n\t$margin in $margins {\n\t\t#{$prefix}margin-#{$key}: #{$margin};\n\t}\n\n\t@each $key,\n\t$value in $border {\n\t\t#{$prefix}border-#{$key}: #{$value};\n\t}\n\n\t#{$prefix}border: var(#{$prefix}border-color) var(#{$prefix}border-width) var(#{$prefix}border-type) var(#{$prefix}border-radius);\n\n\t#{$prefix}gutter: 1rem;\n\t#{$prefix}vertical-unit: #{$vertical-unit};\n\t\n\t#{$prefix}outer-bound: #{2 * $gutter};\n\t#{$prefix}inner-bound-width: #{$inner-bound-width};\n\t#{$prefix}outer-bound-width: #{$outer-bound-width};\n\t#{$prefix}header-height: #{shapes.slope-rem-minmax($min-header-height, $max-header-height, $min-supported-screen-width, $max-supported-screen-width)};\n\n\t@if $substract-header-height {\n\t\t#{$prefix}screen-height: calc(100vh - var(#{$prefix}header-height));\n\t}\n\n\t@else {\n\t\t#{$prefix}screen-height: 100vh;\n\t}\n}\n\n@if $fade-in-transition {\n\t.main-content>* {\n\t\ttransition-duration: 750ms;\n\t\ttransition-timing-function: ease-out, linear;\n\t\ttransition-property: transform, opacity;\n\t}\n\n\tbody:not(.page-has-loaded):not(.cmt-layout) {\n\t\t.main-content>* {\n\t\t\ttransform: translateY(20vh);\n\t\t\topacity: 0;\n\t\t}\n\t}\n}\n\n.margin#{$prefix} {\n\tmargin-bottom: var(#{$prefix}margin);\n}\n\n@each $key,\n$margin in $margins {\n\t.margin#{$prefix}#{$key} {\n\t\tmargin-bottom: var(#{$prefix}margin-#{$key});\n\t}\n\n\t.margin-bottom#{$prefix}#{$key} {\n\t\tmargin-bottom: var(#{$prefix}margin-#{$key});\n\t}\n\n\t.margin-top#{$prefix}#{$key} {\n\t\tmargin-top: var(#{$prefix}margin-#{$key});\n\t}\n\n\t.gap#{$prefix}#{$key} {\n\t\tgap: var(#{$prefix}margin-#{$key});\n\t}\n\n\t.stack#{$prefix}#{$key} {\n\t\t@include shapes.stack(var(#{$prefix}margin-#{$key}));\n\t}\n}","#close-modal {\n\tbackground-color: unset;\n\tborder: none;\n\tdisplay: block;\n\theight: 2rem;\n\tpadding: 0.4rem;\n\tcolor: currentColor;\n\t\n\tsvg {\n\t\tfill: currentColor;\n\t\tdisplay: block;\n\t\twidth: auto;\n\t\theight: 1rem;\n\t}\n}\n\n.modal {\n\tposition: fixed;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tbackground-color: rgb(255 255 255);\n\tmin-width: 42rem;\n\tmax-width: 100vw;\n\tresize: both;\n\toverflow: auto;\n\tborder-radius: 0.25rem;\n\tborder: none;\n\n\t&::backdrop {\n\t\tbackground-color: rgba(0 0 0 / 0.5);\n\t}\n\t\n\t&-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\tbackground-color: black;\n\t\tcolor: #FFF;\n\t\tpadding-left: 0.5rem;\n\t\tfont-weight: 600;\n\t}\n\t\n\t&-main {\n\t\tpadding: 1rem;\n\t\tjustify-self: stretch;\n\t\talign-self: stretch;\n\t}\n\n\t&-form {\n\t\tlegend {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\tdisplay: grid;\n\t\tgap: 2rem;\n\t}\n}\n\n","@use \"settings\" as *;\n@use \"shapes\";\n\n@mixin padding {\n\tpadding: 0.25em 0.5em;\n}\n\na, button, input, select, textarea {\n\tfont: inherit;\n\tcursor: pointer;\n\tcolor: inherit;\n\n\t&:focus {\n\t\toutline: none;\n\t}\n}\n\n[disabled] {\n\topacity: 0.6;\n\tpointer-events: none;\n\tcursor: default;\n}\n\ninput[type=text], textarea {\n\tcursor: text;\n}\n\ninput, textarea, select, input[type=file] {\n\tbackground-color: var(--tusk-contrast-color);\n\tcolor: var(--tusk-text-color);\n\tborder: var(--tusk-border-width) var(--tusk-border-type) var(--tusk-border-color);\n\tborder-radius: var(--tusk-border-radius);\n\t@include shapes.type-setting(400);\n\t@include padding;\n\n\t&[readonly] {\n\t\tcursor: not-allowed;\n\t\topacity: 0.5;\n\t}\n}\n\ninput[type=checkbox] {\n\twidth: auto;\n\tdisplay: inline-block;\n}\n\nlabel {\n\tfont-weight: 600;\n}\n\n.input {\n\tdisplay: flex;\n\tflex-direction: column;\n\tmin-width: 32ex;\n\twidth: fit-content;\n\talign-items: flex-start;\n\tgap: 0.25rem;\n}\n\n.checkbox {\n\t// display: flex;\n\t// gap: var(--tusk-margin-200);\n\n\tlabel {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\n\t\tinput {\n\t\t\tmargin-right: var(--tusk-margin-200);\n\t\t}\n\t}\n\t\n}\n\n.button, button {\n\t@include shapes.button;\n\tfont-weight: 600;\n}\n\n.button-reset {\n\t@include shapes.button-reset;\n}\n\n.icon-button {\n\t// @include shapes.button-reset;\n\theight: 2.7em;\n\tdisplay: flex;\n\tgap: var(--tusk-margin-200);\n\tjustify-content: center;\n\talign-items: center;\n\n\t* {\n\t\tdisplay: inline-block;\n\t}\n}\n\n.alt-button {\n\t@include shapes.button(\n\t\t$background-color: var(--tusk-secondary-color),\n\t\t$border-color: var(--tusk-secondary-color),\n\t\t$color-hover: var(--tusk-secondary-color),\n\t\t$border-color-hover: var(--tusk-secondary-color)\n\t);\n\n\tfont-weight: 600;\n}\n\n.button-container a {\n\t@extend .button;\n}\n\n.alt-button-container a {\n\t@extend .alt-button;\n}\n\n// Link\n.body-text a {\n\tcolor: var(--tusk-primary-color);\n\tfont-weight: 600;\n\n\t&:hover, &:focus {\n\t\tcolor: var(--tusk-primary-color-500);\n\t}\n\n\t&:focus {\n\t\toutline: 2px solid var(--tusk-primary-color-500);\n\t\toutline-offset: 2px;\n\t}\n\n\t&:active {\n\t\tcolor: var(--tusk-primary-color-800);\n\t}\n}\n\n.skip-link {\n\t@include shapes.skip-link;\n}\n\n.editor {\n\tbox-shadow: 0 0 2rem #ddd;\n\tborder-radius: var(--tusk-tusk-border-radius);\n\tpadding: var(--tusk-tusk-margin-200) var(--tusk-tusk-margin-500);\n\tmin-height: 300px;\n\n\t.codex-editor {\n\t\theight: 100%;\n\t}\n}","@use \"settings\" as *;\n@use \"shapes\";\n\n@use 'partials/root' with ($prefix: --tusk-);\n@forward 'components/modal';\n@forward 'partials/input';\n// @use 'partials/common';\n// @use 'partials/input';\n// @use 'partials/tables';\n\n$menu-size: 2rem;\n\nbody {\n\t// padding-left: 300px;\n\tpadding-top: $menu-size;\n}\n\n.layout-menu {\n\tbackground-color: grey;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tz-index: 200;\n\theight: $menu-size;\n\t// width: 300px;\n\n\t&__button {\n\t\tdisplay: inline-block;\n\t\tbackground-color: var(--tusk-primary-color);\n\t\tcolor: var(--tusk-contrast-color);\n\t\tfont-weight: 800;\n\t\ttext-decoration: none;\n\t\tborder: none;\n\t\tpadding: 0 var(--tusk-margin-400);\n\t\t\n\t\t&:focus, &:hover {\n\t\t\tbackground-color: var(--tusk-primary-color-500);\n\t\t}\n\n\t\t& + * {\n\t\t\tmargin-left: auto;\n\t\t}\n\t}\n}\n\n.layout-element {\n\tposition: relative;\n\tborder: solid 4px transparent;\n\tmargin-top: -4px;\n\tmargin-bottom: -4px;\n\ttransition: 150ms border-color;\n\t\n\t&:hover, &:focus-within { \n\t\tborder: solid 4px var(--tusk-primary-color);\n\t\n\t\t.layout-handle {\n\t\t\topacity: 1;\n\t\t}\n\t}\n}\n\n.layout-handle {\n\topacity: 0;\n\tposition: absolute;\n\ttop: 0;\n\tright: 1rem;\n\ttransition: 150ms opacity;\n\tdisplay: flex;\n}\n\n.tusk-button {\n\tdisplay: inline-block;\n\tbackground-color: var(--tusk-primary-color);\n\tcolor: var(--tusk-contrast-color);\n\tfont-weight: 800;\n\ttext-decoration: none;\n\tborder: none;\n\tpadding: var(--tusk-margin-200) var(--tusk-margin-400);\n\t\n\t&:focus, &:hover {\n\t\tbackground-color: var(--tusk-primary-color-500);\n\t}\n}\n\n.modal-form {\n\tfieldset {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 0.5rem;\n\t\tborder: none;\n\t}\n\n\t.input {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmin-width: 12ex;\n\t\twidth: 100%;\n\t}\n\t\n\tinput[type='text'], input[type='number'], select, textarea {\n\t\tcolor: var(--tusk-text-color);\n\t\tpadding: var(--tusk-margin-200);\n\t\tbox-shadow: 0 0 2rem #ddd;\n\t\tborder-radius: 0.5rem;\n\t\tborder-radius: var(--tusk-border-radius);\n\t\tborder: none;\n\t}\n\n\tinput[type='checkbox'] {\n\t\twidth: 1em;\n\t\theight: 1em;\n\t\taccent-color: var(--tusk-primary-color);\n\t\tmargin-right: 0.5rem;\n\t}\n}\n"]}